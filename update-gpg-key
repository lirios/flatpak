#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# This file is part of Liri.
#
# Copyright (C) 2018 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
#
# $BEGIN_LICENSE:GPL3+$
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# $END_LICENSE$
#

from utilities import command

import argparse
import base64
import os
import sys
import tempfile


parser = argparse.ArgumentParser()
parser.add_argument('--gpg-sign', help='GPG key to sign commits',
                    action='store', type=str, required=True)

args = parser.parse_args()

# Export GPG key to a file
gpg_filename = tempfile.mkstemp(prefix=str(os.getpid()))[1]
if os.path.exists(gpg_filename):
    os.unlink(gpg_filename)
if command(['gpg2', '--output', gpg_filename, '--export', args.gpg_sign]).returncode != 0:
    print('Failed to export GPG key', file=sys.stderr)
    sys.exit(1)

# Encode GPG key
with open(gpg_filename, 'rb') as f:
    gpg_encoded = base64.b64encode(f.read())

# Remove exported GPG key
os.unlink(gpg_filename)

# Replace GPGKey entry
for dirname in ('stable', 'unstable'):
    for filename in os.listdir(dirname):
        if filename.endswith('.flatpakref') is False:
            continue
        content = ''
        with open(os.path.join(dirname, filename), 'r') as f:
            done = False
            for line in f.readlines():
                if line.startswith('GPGKey='):
                    content += 'GPGKey=%s\n' % gpg_encoded.decode('ascii')
                    done = True
                else:
                    content += line
            if done is False:
                content += 'GPGKey=%s\n' % gpg_encoded.decode('ascii')
        with open(os.path.join(dirname, filename), 'w') as f:
            f.write(content)
